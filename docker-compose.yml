# Use postgres/example as user/password credentials
name: cobit_dev

services:

  db:
    image: postgres:16.3
    restart: always
    shm_size: 128mb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - ${POSTGRES_PORT?Variable not set}:${POSTGRES_PORT?Variable not set}
    networks:
      custom_net:
        ipv4_address: ${POSTGRES_SERVER?Variable not set}

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=dracula
    ports:
      - 8080:8080
    networks:
      custom_net:
        ipv4_address: 172.16.1.3
    extra_hosts:
      - host.docker.internal:host-gateway

  redis:
    image: redis:7.4
    restart: always
    environment:
      - save=60
      - loglevel=warning
    ports:
      - 6379:6379
    networks:
      custom_net:
        ipv4_address: 172.16.1.4

  rabbitmq:
    # There's no need to use an image with a management plugin at production
    image: rabbitmq:4.0.2-management-alpine
    restart: always
    # TODO: add memory limit
    ports:
      - 5672:5672
    networks:
      custom_net:
        ipv4_address: 172.16.1.5


volumes:
  app-db-data:

networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.1.0/24
          gateway: 172.16.1.1
